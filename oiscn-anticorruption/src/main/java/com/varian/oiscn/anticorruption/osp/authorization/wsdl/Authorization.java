
package com.varian.oiscn.anticorruption.osp.authorization.wsdl;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "Authorization", targetNamespace = "http://schemas.varian.com/Foundation/Platform/Public/Authorization/2011/4/", wsdlLocation = "http://10.167.183.6:55000/OSPServices/Authorization.svc?wsdl")
public class Authorization
        extends Service {

    private final static URL AUTHORIZATION_WSDL_LOCATION;
    private final static WebServiceException AUTHORIZATION_EXCEPTION;
    private final static QName AUTHORIZATION_QNAME = new QName("http://schemas.varian.com/Foundation/Platform/Public/Authorization/2011/4/", "Authorization");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://10.167.183.6:55000/OSPServices/Authorization.svc?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AUTHORIZATION_WSDL_LOCATION = url;
        AUTHORIZATION_EXCEPTION = e;
    }

    public Authorization() {
        super(__getWsdlLocation(), AUTHORIZATION_QNAME);
    }

    public Authorization(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTHORIZATION_QNAME, features);
    }

    public Authorization(URL wsdlLocation) {
        super(wsdlLocation, AUTHORIZATION_QNAME);
    }

    public Authorization(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUTHORIZATION_QNAME, features);
    }

    public Authorization(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Authorization(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTHORIZATION_EXCEPTION != null) {
            throw AUTHORIZATION_EXCEPTION;
        }
        return AUTHORIZATION_WSDL_LOCATION;
    }

    /**
     * @return returns IAuthorization
     */
    @WebEndpoint(name = "BasicHttpBinding_IAuthorization")
    public IAuthorization getBasicHttpBindingIAuthorization() {
        return super.getPort(new QName("http://schemas.varian.com/Foundation/Platform/Public/Authorization/2011/4/", "BasicHttpBinding_IAuthorization"), IAuthorization.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IAuthorization
     */
    @WebEndpoint(name = "BasicHttpBinding_IAuthorization")
    public IAuthorization getBasicHttpBindingIAuthorization(WebServiceFeature... features) {
        return super.getPort(new QName("http://schemas.varian.com/Foundation/Platform/Public/Authorization/2011/4/", "BasicHttpBinding_IAuthorization"), IAuthorization.class, features);
    }

    /**
     * @return returns IAuthorization
     */
    @WebEndpoint(name = "BasicHttpBinding_IAuthorization1")
    public IAuthorization getBasicHttpBindingIAuthorization1() {
        return super.getPort(new QName("http://schemas.varian.com/Foundation/Platform/Public/Authorization/2011/4/", "BasicHttpBinding_IAuthorization1"), IAuthorization.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IAuthorization
     */
    @WebEndpoint(name = "BasicHttpBinding_IAuthorization1")
    public IAuthorization getBasicHttpBindingIAuthorization1(WebServiceFeature... features) {
        return super.getPort(new QName("http://schemas.varian.com/Foundation/Platform/Public/Authorization/2011/4/", "BasicHttpBinding_IAuthorization1"), IAuthorization.class, features);
    }

}
