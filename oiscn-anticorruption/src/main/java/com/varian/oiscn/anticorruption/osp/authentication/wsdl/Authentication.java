
package com.varian.oiscn.anticorruption.osp.authentication.wsdl;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "Authentication", targetNamespace = "http://schemas.varian.com/Foundation/Platform/Public/Authentication/2011/4/", wsdlLocation = "file:/C:/Users/gbt1220/Desktop/Authentication.xml")
public class Authentication
        extends Service {

    private final static URL AUTHENTICATION_WSDL_LOCATION;
    private final static WebServiceException AUTHENTICATION_EXCEPTION;
    private final static QName AUTHENTICATION_QNAME = new QName("http://schemas.varian.com/Foundation/Platform/Public/Authentication/2011/4/", "Authentication");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/gbt1220/Desktop/Authentication.xml");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AUTHENTICATION_WSDL_LOCATION = url;
        AUTHENTICATION_EXCEPTION = e;
    }

    public Authentication() {
        super(__getWsdlLocation(), AUTHENTICATION_QNAME);
    }

    public Authentication(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTHENTICATION_QNAME, features);
    }

    public Authentication(URL wsdlLocation) {
        super(wsdlLocation, AUTHENTICATION_QNAME);
    }

    public Authentication(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUTHENTICATION_QNAME, features);
    }

    public Authentication(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Authentication(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTHENTICATION_EXCEPTION != null) {
            throw AUTHENTICATION_EXCEPTION;
        }
        return AUTHENTICATION_WSDL_LOCATION;
    }

    /**
     * @return returns IAuthentication
     */
    @WebEndpoint(name = "BasicHttpBinding_IAuthentication")
    public IAuthentication getBasicHttpBindingIAuthentication() {
        return super.getPort(new QName("http://schemas.varian.com/Foundation/Platform/Public/Authentication/2011/4/", "BasicHttpBinding_IAuthentication"), IAuthentication.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IAuthentication
     */
    @WebEndpoint(name = "BasicHttpBinding_IAuthentication")
    public IAuthentication getBasicHttpBindingIAuthentication(WebServiceFeature... features) {
        return super.getPort(new QName("http://schemas.varian.com/Foundation/Platform/Public/Authentication/2011/4/", "BasicHttpBinding_IAuthentication"), IAuthentication.class, features);
    }

}
